From 0e482e9c2030a30012f4d7d0040023395055ff72 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?David=20P=C3=A4tzel?= <david.paetzel@uni-a.de>
Date: Fri, 11 Mar 2022 09:03:30 +0100
Subject: [PATCH] Fix parse_version in setup.py

---
 setup.py | 30 +-----------------------------
 1 file changed, 1 insertion(+), 29 deletions(-)

diff --git a/setup.py b/setup.py
index a6cfb02..a555439 100644
--- a/setup.py
+++ b/setup.py
@@ -134,35 +134,7 @@ def parse_version(version_file):
     raises AssertionError: If `${GITHUB_REF#/v/*/}` doesn't start with
         the version specified in `version_file`.
     """
-    semver_regex = r"(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?"
-    semver_prog = re.compile(semver_regex)
-
-    with open(version_file, "r") as fp:
-        version = fp.read().strip()
-        assert semver_prog.match(version) is not None
-
-    if os.getenv("CIBUILDWHEEL") is not None:
-        ci_ref = os.getenv("GITHUB_REF")
-        assert ci_ref is not None, "Github ref not found, are we running in CI?"
-
-        ci_version_match = semver_prog.search(ci_ref)
-        assert ci_version_match is not None, f"Couldn't match semver in {ci_ref}"
-
-        ci_version = ci_version_match.group(0)
-        assert ci_version.startswith(
-            version
-        ), f"{ci_version} not prefixed with {version}"
-
-        version = ci_version
-    else:
-        sha = (
-            subprocess.check_output(["git", "rev-parse", "--short", "HEAD"], cwd=here)
-            .decode("ascii")
-            .strip()
-        )
-        version += f"+{sha}"
-
-    return version
+    return "0.7.4"
 
 
 if __name__ == "__main__":
-- 
2.34.1

